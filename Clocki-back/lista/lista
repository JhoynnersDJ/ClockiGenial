const express = require('express');
const { collection, query, getDocs, where, orderBy, limit, doc, getDoc} = require('firebase/firestore');
const { db } = require('../database/firebase');

const router = express.Router();

// Ruta para obtener todos los registros de tiempo de una actividad
router.get('/lista-tiempo/:id_actividad', async (req, res) => {
  try {
    const { id_actividad } = req.params;
    console.log('Valor de id_actividad:', id_actividad);

    // Realiza una consulta para obtener todos los registros de tiempo relacionados con la actividad
    const registroTiempoRef = collection(db, 'registro_tiempo');
    const querySnapshot = await getDocs(registroTiempoRef);

    const registrosTiempo = [];

    querySnapshot.forEach((doc) => {
      const data = doc.data();
      if (data.actividad.id === id_actividad) {
        // Filtra los campos que deseas y agrega el ID del documento
        const { nombre_actividad, duracion, fecha, costo_intervalo } = data;
        const registroTiempoId = doc.id; // ID del documento
        registrosTiempo.push({ id_registro: registroTiempoId, nombre_actividad, duracion, fecha, costo_intervalo });
      }
    });

    console.log('Contenido de registrosTiempo:', registrosTiempo); // Agrega esta línea para imprimir en la consola
    res.status(200).json(registrosTiempo);
  } catch (error) {
    console.error('Error al obtener registros de tiempo:', error);
    res.status(500).json({ error: 'Ocurrió un error al obtener registros de tiempo' });
  }
});
//---------------------------------------------------------------------------------------

// Ruta para obtener actividades de un usuario y registros de tiempo de esas actividades
router.get('/actividades-por-usuario/:id_usuario', async (req, res) => {
  try {
    const { id_usuario } = req.params; // Captura el id_usuario de la URL

    const actividadesRef = collection(db, 'actividades');
    const actividadesQuerySnapshot = await getDocs(
      query(
        actividadesRef,
        where('usuario', '==', doc(db, 'usuarios', id_usuario))
      )
    );

    const actividadesUsuario = [];
    const actividadRefs = [];

    for (const doc of actividadesQuerySnapshot.docs) {
      const id_actividad = doc.id;
      actividadRefs.push(doc.ref);

      const data = doc.data();
      const {
        nombre_actividad,
        completado,
        duracion_total,
        proyecto,
        tarifa,
        fecha_registro,
        hora_registro,
        total_tarifa, // Agrega el campo total_tarifa aquí
      } = data;

      let nombre_proyecto = null;
      let categoria = null;
      
      if (proyecto) {
        const proyectoDocRef = proyecto;
        const proyectoDocSnapshot = await getDoc(proyectoDocRef);

        if (proyectoDocSnapshot.exists()) {
          nombre_proyecto = proyectoDocSnapshot.data().nombre_proyecto;
          categoria = proyectoDocSnapshot.data().categoria;
        }
      }

      actividadesUsuario.push({
        id_actividad,
        nombre_actividad,
        completado,
        duracion_total,
        tarifa,
        fecha_registro,
        hora_registro,
        nombre_proyecto,
        categoria,
        total_tarifa, // Incluye el campo total_tarifa en la respuesta
      });
    }

    res.status(200).json({ actividadesUsuario });
  } catch (error) {
    console.error('Error al obtener actividades y registros de tiempo:', error);
    res.status(500).json({ error: 'Ocurrió un error al obtener actividades y registros de tiempo' });
  }
});

// Ruta para obtener todos los proyectos de un usuario
router.get('/proyectos-por-usuario/:id_usuario', async (req, res) => {
  try {
    const { id_usuario } = req.params; // Captura el id_usuario de la URL

    const proyectosRef = collection(db, 'proyectos');
    const proyectosQuerySnapshot = await getDocs(
      query(
        proyectosRef,
        where('usuario', '==', doc(db, 'usuarios', id_usuario))
      )
    );

    const proyectosUsuario = [];

    proyectosQuerySnapshot.forEach(doc => {
      const id_proyecto = doc.id;
      const data = doc.data();
      const { nombre_proyecto, categoria, descripcion } = data;

      proyectosUsuario.push({
        id_proyecto,
        nombre_proyecto,
        categoria,
        descripcion,
      });
    });

    res.status(200).json({
      proyectosUsuario,
    });
  } catch (error) {
    console.error('Error al obtener proyectos:', error);
    res.status(500).json({ error: 'Ocurrió un error al obtener proyectos' });
  }
});




module.exports = router;

