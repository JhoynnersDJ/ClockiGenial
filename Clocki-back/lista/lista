const express = require('express');
const { collection, query, getDocs, where, orderBy, limit, doc} = require('firebase/firestore');
const { db } = require('../database/firebase');

const router = express.Router();

// Ruta para obtener todos los registros de tiempo de una actividad
router.post('/lista-actividad', async (req, res) => {
  try {
    const { id_actividad } = req.body;
    console.log('Valor de id_actividad:', id_actividad);

    // Realiza una consulta para obtener todos los registros de tiempo relacionados con la actividad
    const registroTiempoRef = collection(db, 'registro_tiempo');
    const querySnapshot = await getDocs(registroTiempoRef);

    const registrosTiempo = [];

    querySnapshot.forEach((doc) => {
      const data = doc.data();
      if (data.actividad.id === id_actividad) {
        // Filtra los campos que deseas
        const { nombre_actividad, duracion, fecha } = data;
        registrosTiempo.push({ nombre_actividad, duracion, fecha });
      }
    });

    console.log('Contenido de registrosTiempo:', registrosTiempo); // Agrega esta línea para imprimir en la consola
    res.status(200).json(registrosTiempo);
  } catch (error) {
    console.error('Error al obtener registros de tiempo:', error);
    res.status(500).json({ error: 'Ocurrió un error al obtener registros de tiempo' });
  }
});


// Ruta para obtener actividades de un usuario por su ID
router.post('/actividades-por-usuario', async (req, res) => {
  try {
    const { id_usuario } = req.body; // Captura el id_usuario del cuerpo de la solicitud

    // Realiza una consulta para obtener todas las actividades relacionadas con el usuario
    const actividadesRef = collection(db, 'actividades');
    const querySnapshot = await getDocs(
      query(
        actividadesRef,
        where('usuario', '==', doc(db, 'usuarios/' + id_usuario))
      )
    );

    const actividadesUsuario = querySnapshot.docs.map((doc) => {
      const data = doc.data();
      // Selecciona solo los campos que deseas
      const {
        nombre_actividad,
        completado,
        duracion_total,
        proyecto,
        tarifa,
        fecha_registro,
        hora_registro
      } = data;
      return {
        nombre_actividad,
        completado,
        duracion_total,
        proyecto,
        tarifa,
        fecha_registro,
        hora_registro
      };
    });

    res.status(200).json(actividadesUsuario);
  } catch (error) {
    console.error('Error al obtener actividades por usuario:', error);
    res.status(500).json({ error: 'Ocurrió un error al obtener actividades por usuario' });
  }
});

module.exports = router;


